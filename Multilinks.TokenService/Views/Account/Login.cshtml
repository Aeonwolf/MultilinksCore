@using System.Linq
@using Multilinks.TokenService.Entities;

@model LoginViewModel
@inject SignInManager<UserEntity> SignInManager

<section id="main_content">
   <div id="intro">
      <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-box animated fadeIn">
         <div class="box-header">
            <h3>Log In</h3>
         </div>
         <div asp-validation-summary="All" id="form_message"></div>
         <input asp-for="Email" placeholder="Email" autofocus />
         <br />
         <input asp-for="Password" placeholder="Password" autocomplete="off" />
         <br />
         <button name="button" value="login">Login</button>
         <br />
      </form>
      @*<div class="col-md-6 col-md-offset-2">
         <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
               var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
               if(loginProviders.Count == 0)
               {
                  <div>
                     <p>
                        There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                        for details on setting up this ASP.NET application to support logging in via external services.
                     </p>
                  </div>
               }
               else
               {
                  <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                     <div>
                        <p>
                           @foreach(var provider in loginProviders)
                           {
                              <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
                           }
                        </p>
                     </div>
                  </form>
               }
            }
         </section>
      </div>*@
   </div>
</section>

@section Scripts {
   @await Html.PartialAsync("_ValidationScriptsPartial")
}